@use "sass:map";
@use "sass:selector";
@use "sass:color";

@use "util/colorset" as *;
@use "util/mdi";

@use 'colorsets/obsidian' as c_obsidian;
@use 'colorsets/novela'   as c_novela;

// colorsets to use for light mode and dark mode
$colors-light: c_novela.$config   !default;
$colors-dark:  c_obsidian.$config !default;

// fonts
$font-primary: [
	(source: "aven", name: "Whitney", styles: normal italic, widths: 300 400 500 600 700, class: sans-serif, important: true)
] !default;
$font-display: [
	(source: "aven", name: "ABC Ginto Normal", styles: normal italic, widths: 400 500 700, class: sans-serif, important: true)
] !default;

//- feature toggles -//
// enable font overrides
$override-fonts:            true !default;
// enable color overrides
$override-colors:           true !default;
// enable the theme in dark mode
$include-dark:              true !default;
// enable the theme in light mode
$include-light:             true !default;
// add a pill to deleted messages like mentions and ephermals
$message-logger-pill:       true !default;
// gift from god
$hide-nitro-upsells:        true !default;
// hide blocked messages
$hide-blocked-messages:     true !default;
// revert new messages bar to its original thickness
$thin-new-messages-bar:     true !default;
// edited timestamp
$edited-timestamp:          true !default;
// hide beta badge
$hide-beta-badge:           true !default;
// hide buttons in message box
$hide-slash-command-button: true !default;
$hide-thread-button:        true !default;
$hide-nitro-button:         $hide-nitro-upsells !default;
$hide-sticker-button:       true !default;
// hide new feature popouts
$hide-new-feature-popouts:  $hide-nitro-upsells !default;
// hide dm tabs
$hide-nitro-dm-tab:         $hide-nitro-upsells !default;
$hide-snowsgiving-dm-tab:   true !default;
// hide help button
$hide-help-button:          true !default;
// hide hello button
$hide-hello-button:         true !default;
// hide browse channels button
$hide-browse-channels-button: true !default;
// hide thread suggestion bar
$hide-thread-suggestion-bar:true !default;
// hide nickname list
$hide-profile-aka-list:     true !default;
// star on right
$star-on-right:             true !default;
// solid profile background
$solid-profile-background:  true !default;
// name tag custom font hack
$username-hack:             true !default;
// remove ... in about me
$full-about-me:             true !default;
// less intrusive mentions
$mention-bullet:            true !default;
// collapsible search bar
$collapsible-search-bar:    true !default;

// wow
@mixin colored {
	@if $override-colors {
		@each $i, $c, $t in [$include-dark $colors-dark ".theme-dark", $include-light $colors-light ".theme-light"] {
			@if $i {
				@each $s in & {
					@if $s == null {
					       @at-root #{$t} {
						       @content($c);
					       }
					} @else if selector.is-superselector(".theme-dark, .theme-light, .theme-dark *, .theme-light *", $s) {
						@at-root #{$s} {
							@content($c);
						}
					} @else {
						@at-root #{selector.unify("#{$t} *", $s)} {
							@content($c);
						}
					}
				}
			}
		}
	} @else { @content(map.empty()); }
}

// discord is special and needs three different color things
@mixin dsc-color($name, $color) {
	--#{$name}: #{$color};
	--#{$name}-rgb: #{red($color)}, #{blue($color)}, #{green($color)};
	--#{$name}-hsl: #{hue($color)}, #{saturation($color)}, #{lightness($color)};
}

// replace fonts
@if $override-fonts {
	@each $target, $fonts in (font-primary: $font-primary, font-display: $font-display){
		@each $font in $fonts {
			@if map.get($font, "source") == "aven" {
				@each $style in map.get($font, "styles") {
					@each $width in map.get($font, "widths") {
						@font-face {
							font-family: map.get($font, "name");
							font-style:  $style;
							font-weight: $width;
							src: url("https://toxicaven.dev/assets/#{map.get($font, "name")}-#{$width}-#{$style}.woff2") format("woff2");
						}
					}
				}

				:root {
					--#{$target}: "#{map.get($font, "name")}", "#{map.get($font, "class")}" #{if(map.get($font, "important"), !important, "")};
				}
			} @else {
				@error "invalid font source \"#{map.get($font,"source")}\"";
			}
		}
	}
}

// color overrides
@if $override-colors {
	@include colored using ($s) {
		@include cs-each($s) using ($name) {
			@if cs-is($s, $name, "color") {
				@if csc-has-variants($s, $name) {
					@each $vname, $value in csc-get-variants($s, $name){
						@include dsc-color("#{$name}-#{$vname}",$value);
					}
				}

				@if map.get(map.get($s, $name), "color") != null {
					@include dsc-color($name,csc-get-color($s,$name));
				}
			}
		}

		[class*="mentioned__"]::before {
			background-color: #{csc-get-color($s, "pill-mentioned")};
		}

		[class*="reaction__"] {
			background-color: #{csc-get-color(
				$s,
				"reaction-background",
				$default: var(--background-secondary)
			)};
		}

		[class^="mainContent__"]:not([href]) > [aria-label^="Text"] + [class^="name-"] {
			text-decoration: line-through;
		}

		[class^="expandedFolderBackground__"] {
			background-color: #{csc-get-color(
				$s,
				"expanded-folder-background",
				$default: var(--background-secondary)
			)} !important;
		}

		[class^="button__"][class*="colorPrimary__"] {
			color: #{csc-get-color($s, "button-primary-text", $default: var(--text-primary))};
		}

		[class*="modeUnread__"] [class^="name__"] {
			color: #{csc-get-color($s, "channels-unread", $default: var(--interactive-active))};
		}

		[class*="modeSelected__"] [class^="name__"] {
			color: #{csc-get-color($s, "channels-selected", $default: var(--interactive-active))};
		}

		:is([class*="modeUnread__"], [class*="modeSelected"]):hover [class^="name__"] {
			color: #{csc-get-color($s, "channels-hover", $default: var(--interactive-active))};
		}
	}
}

// remessagelogger pill
@if $message-logger-pill {
	@include colored using ($s) {
		.messagelogger-deleted {
			&::before {
				background-color: #{csc-get-color($s, "message-deleted-pill", $default: color.adjust(csc-get-color($s, "message-deleted", $default: #f04747), $lightness: 10%))};					
				content: "";
				position: absolute;
				display: block;
				top: 0;
				left: 0;
				bottom: 0;
				pointer-events: none;
				width: 2px;
			}
		}
	}
}

// hide blocked messages
@if $hide-blocked-messages {
	div[class^=groupStart__] {
		display: none;
	}
}

// thin new messages bar
@if $thin-new-messages-bar {
	[class^=newMessagesBar__] {
		height: 24px;
	}
}

// timestamp on edited messages
@if $edited-timestamp {
	[class^=markup__] {
		[class^=timestamp__]>time {
			span { display: none; }

			&:after {
				font-size: 0.625rem;
				font-weight: 400;
				line-height: 1;
				user-select: none;
				content: "(" attr(aria-label) ")";
			}
		}
	}			
}

// remove the beta badge
@if $hide-beta-badge {
	[class^=textBadge__][class*=base__][class*=eyebrow__][class*=baseShapeRound__] {
		display: none;
	}
}

@if $hide-slash-command-button {
	#channel-attach-SLASH_COMMAND { display: none; }
}

@if $hide-thread-button {
	#channel-attach-THREAD { display: none; }
}

[class^=channelTextArea__] [class^=buttons__] {
	@if $hide-nitro-button   { > :nth-child(1) { display: none; } }
	@if $hide-sticker-button { > :nth-child(3) { display: none; } }
}

@if $hide-new-feature-popouts {
	// for some reason unknown to man, discord randomizes the popout thing so i have to search for its id instead of its class
	[id^=popout_] [class*=upsellTooltipWrapper__] {
		display: none;
	}
}

@if $hide-nitro-dm-tab {
	[class^=privateChannels] [class^=content__] > li:nth-of-type(2) {
		display: none;
	}
}


@if $hide-snowsgiving-dm-tab {
	[class*=snowsgivingLink__] {
		display: none;
	}
}

@if $hide-help-button {
	[class^=toolbar__] a[href*=support] { display: none; }
}

@if $hide-hello-button {
	[class^=welcomeCTA__], [class^=scrollerInner__] > [class^=containerCompact__] {
		display: none;
	}
}

@if $hide-browse-channels-button {
	[aria-label=Channels] [class^=containerDefault__]:not([data-dnd-name]) {
		display: none;

		&+[class^=sectionDivider__] {
			display: none;
		}
	}
}

@if $hide-thread-suggestion-bar {
	[class^=threadSuggestionBar__] {
		display: none;
	}
}

@if $hide-nitro-upsells {
	[class^=tryItOutSection__],
	[class*=upsellOverlayContainer__]:has([class^=upsellOverlay__]) { display: none; }
}

@if $hide-profile-aka-list {
	[class*=usernameSection__]>div>[class^=container__] { display: none; }
}

@if $star-on-right {
	[class^=imageAccessory__] {
		left: unset;
		right: 6px;

		// rest in peace black and white star
		//   /^^^\  .
		//   |   | <o>
		// __|___|___\
	}
}

[class^=userPopoutInner__], [class^=userProfileModalInner__] {
	@if $solid-profile-background {
		--profile-avatar-border-color: var(--profile-body-background-color);
		background: var(--profile-body-background-color) !important;
	}

	@if $username-hack {
		[class^=nameTag__] {
			font-family: var(--font-primary);
			font-weight: 500;
		}
	}

	@if $full-about-me {
		[class^=userInfoText__]>[class^=defaultColor__] {
			-webkit-line-clamp: unset !important;
		}
	}
}

@if $collapsible-search-bar {
    // collapsible search bar
    [class^=search__]:not([class*=open__])>[class^=searchBar__] {
        width:      24px;
        background: transparent;

        >[class^=icon__] {
            // da hand
            cursor: pointer;

            // do some horrible stretching thing to make it look like a normal icon
            svg {
                width:  24px;
                height: 24px;

                margin-left: -3px;
                margin-top:  -3px;

                color: var(--interactive-normal);
            }

            // change color like a normal icon
            &:hover svg {
                color: var(--interactive-hover);
            }
        }
    }
}

@if $mention-bullet {
    [class^=sidebar__] {
        [class*=unreadTop__], [class*=unreadBottom__] {
            display:         flex;
            justify-content: right;
            padding-right:   0px;
        }

        [class*=unreadTop__] [class*=unreadBar__] {
            background-image: url(mdi.$up-arrow-thin-w);
        }
        
        [class*=unreadDown__] [class*=unreadBar__] {
            background-image: url(mdi.$down-arrow-thin-w);
        }

        [class*=unreadBar__] {
            // background space
            background-size:     20px 20px;
            background-repeat:   no-repeat;
            background-position: 15px 0.0px;

            padding: 0;
            padding-right: 15px;
            border-top-right-radius: 0px;
            border-bottom-right-radius: 0px;
            width: 20px;
            height: 20px;
            text-align: center;
            line-height: 20px;

            span {
                font-size: 0px;
                position:  relative;
                &::after {
                    position:   absolute;
                    top:        0px;
                    left:       0px;

                    font-size:  12px;
                    content:    "!";
                }
            }
        }

        .container-24rGVp {
            justify-content: right;

            [class*=mentionsBar__] {
                background-size:     20px 20px;
                background-repeat:   no-repeat;
                background-position: 15px 0.0px;
            }

            &[class*=top__] [class*=mentionsBar__] {
                background-image: url(mdi.$up-arrow-thin-w);
            }

            &[class*=bottom__] [class*=mentionsBar__] {
                background-image: url(mdi.$down-arrow-thin-w);
            }

            [class*=mentionsBar__] {
                // makes the pill a bullet
                padding: 0;
                padding-right: 15px;
                border-top-right-radius: 0px;
                border-bottom-right-radius: 0px;

                >div {
                    // makes it round
                    padding:      0;
                    text-align:   center;
                    line-height:  20px;
                    width:        20px;
                    height:       20px;

                    // gets the funny number
                    --status-danger-text-real: var(--status-danger-text);
                    --status-danger-text: #00000000;
                    font-size: 0px;
                    word-spacing: 1000px;
                    &::first-line {
                        color:        var(--white-500);
                        word-spacing: 0px;
                        font-size:    12px;
                        font-weight:  700;
                    }
                }
            }
        }
    }
}
